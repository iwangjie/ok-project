kind: pipeline
name: ok应用自动部署

steps:
  - name: 规范检测
    image: golang
    environment:
      GO111MODULE: on
      GOPROXY: https://goproxy.cn
    commands:
      - go get github.com/golangci/golangci-lint/cmd/golangci-lint
      - golangci-lint run
  - name: 单元测试
    image: golang
    pull: never
    commands:
      - GOPROXY=https://goproxy.cn go build
      - go test ./...
  - name: 构建镜像
    image: plugins/docker
    pull: never
    settings:
      mirror: https://qcxmbvw.mirror.aliyuncs.com
      registry: registry.cn-hangzhou.aliyuncs.com
      repo: registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project
      use_cache: true
      username: 13373381619
      password: wangjie8217
    tags:
      - latest
    when:
      event: push
      branch: master
  - name: 部署镜像
    image: appleboy/drone-ssh
    pull: never
    settings:
      host: '172.17.0.1'
      username: 'wangjie'
      password: 'wangjie8217'
      port: 22
      script:
        - docker pull registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project
        - docker stop ok-project && docker stop ok-project-stand && docker rm $(docker ps -a | grep ok-project | awk '{print $1}'| tr '\n' ' ')
        - docker create --name ok-project -v /home/wangjie/app/ok-project/etc/config.yaml:/etc/ok_project/config.yaml --network app-network --network-alias app-node1 registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project:latest
        - docker start ok-project
        - docker create --name ok-project-stand -v /home/wangjie/app/ok-project/etc/config.yaml:/etc/ok_project/config.yaml --network app-network --network-alias app-node2 registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project:latest
        - docker start ok-project-stand

  - name: 钉钉通知
    image: guoxudongdocker/drone-dingtalk    # 钉钉通知专用镜像
    pull: never
    settings:
      token: 63443d92f7023155a29e068136dd26bfaff2fe7458213a0a772f02988ba41c01
#        from_secret: SECd34fc7b5b3589587484a7ba0c07068b3b0b24835c6b695127e08ef2daeeea20d     # 钉钉的token(前面配置)
      type: markdown
      message_color: true
      message_pic: true
      sha_link: true
    when:
      status: [failure, success]   # 不管成功与否都发通知
#  - name: 部署到生产环境
#    image: guoxudongdocker/drone-dingtalk    # 钉钉通知专用镜像
#    pull: never
#    settings:
#      token: 63443d92f7023155a29e068136dd26bfaff2fe7458213a0a772f02988ba41c01
#      #        from_secret: SECd34fc7b5b3589587484a7ba0c07068b3b0b24835c6b695127e08ef2daeeea20d     # 钉钉的token(前面配置)
#      type: markdown
#      message_color: true
#      message_pic: true
#      sha_link: true
#    when:
#      status: [ failure, success ]
#    trigger:
#      event:
#        - promote
#      target:
#        - production


---

kind: pipeline
type: docker
name: deploy

steps:
  - name: 部署到生产
    image: node
    commands:
      - echo 部署成功

trigger:
  event:
    - promote
  target:
    - production
