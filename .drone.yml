kind: pipeline
name: ok应用自动部署

steps:
#  - name: linter
#    image: golang:latest
#    environment:
#      GOPROXY: https://goproxy.cn
#    commands:
#      - go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
#      - golangci-lint run
#  - name: 执行单元测试
#    image: golang
#    pull: never
#    commands:
#      - GOPROXY=https://goproxy.cn go build
#      - go test ./...
#  - name: 构建镜像
#    image: plugins/docker
#    pull: never
#    settings:
#      mirror: https://qcxmbvw.mirror.aliyuncs.com
#      registry: registry.cn-hangzhou.aliyuncs.com
#      repo: registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project
#      use_cache: true
#      username: 13373381619
#      password: wangjie8217
#    tags:
#      - latest
#    when:
#      event: push
#      branch: master
  - name: 部署
    image: appleboy/drone-ssh
    pull: never
    settings:
      host: '172.17.0.1'
      username: 'wangjie'
      password: 'wangjie8217'
      port: 22
      script:
        - docker pull registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project
        - docker stop ok-project && docker stop ok-project-stand && docker rm $(docker ps | grep ok-project | awk '{print $1}') | tr '\n' ' '
        - docker create --name ok-project -v /home/wangjie/app/ok-project/etc/config.yaml:/etc/ok_project/config.yaml --network app-network --network-alias app-node1 registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project:latest
        - docker start ok-project
        - docker create --name ok-project-stand -v /home/wangjie/app/ok-project/etc/config.yaml:/etc/ok_project/config.yaml --network app-network --network-alias app-node2 registry.cn-hangzhou.aliyuncs.com/wangjie_dev/ok-project:latest
        - docker start ok-project-stand
        - echo 部署完成